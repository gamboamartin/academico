<?php
/**
 * @author Martin Gamboa Vazquez
 * @version 1.0.0
 * @created 2022-05-14
 * @final En proceso
 *
 */
namespace gamboamartin\academico\controllers;


use gamboamartin\errores\errores;
use gamboamartin\system\links_menu;
use gamboamartin\system\system;
use gamboamartin\template_1\html;
use html\ac_centro_educativo_html;
use models\ac_centro_educativo;
use models\ac_plan_estudio_pertenece;
use PDO;
use stdClass;

class controlador_ac_centro_educativo extends system {

    public stdClass $planes_estudio;
    public int $ac_centro_educativo_id = -1;
    public int $ac_plan_estudio_pertenece_id = -1;
    public string $link_ac_plan_estudio_pertenece_alta_bd = '';
    public string $link_ac_plan_estudio_pertenece_modifica_bd = '';
    public function __construct(PDO $link, html $html = new \gamboamartin\template_1\html(),
                                stdClass $paths_conf = new stdClass()){

        $modelo = new ac_centro_educativo(link: $link);
        $html_ = new ac_centro_educativo_html($html);
        $obj_link = new links_menu($this->registro_id);
        parent::__construct(html:$html_, link: $link,modelo:  $modelo, obj_link: $obj_link, paths_conf: $paths_conf);

        $this->titulo_lista = 'Puestos';

        $keys_row_lista = $this->keys_rows_lista();
        if(errores::$error){
            $error = $this->errores->error(mensaje: 'Error al generar keys de lista',data:  $keys_row_lista);
            print_r($error);
            exit;
        }
        $this->keys_row_lista = $keys_row_lista;


        $this->ac_centro_educativo_id = $this->registro_id;
    }

    public function alta(bool $header, bool $ws = false): array|string
    {
        $r_alta =  parent::alta(header: false); // TODO: Change the autogenerated stub
        if(errores::$error){
            return $this->retorno_error(mensaje: 'Error al generar template',data:  $r_alta, header: $header,ws:$ws);
        }

        $inputs = (new ac_centro_educativo_html(html: $this->html_base))->genera_inputs_alta(controler: $this, link: $this->link);
        if(errores::$error){
            $error = $this->errores->error(mensaje: 'Error al generar inputs',data:  $inputs);
            print_r($error);
            die('Error');
        }
        return $r_alta;
    }

    private function select_ac_centro_educativo_id(): array|string
    {
        $select = (new ac_centro_educativo_html(html: $this->html_base))->select_ac_centro_educativo_id(cols:12,
            con_registros: true, id_selected: $this->registro_id,link:  $this->link, disabled: true);

        if(errores::$error){
            return $this->errores->error(mensaje: 'Error al generar select datos',data:  $select);
        }
        $this->inputs->select->ac_centro_educativo_id = $select;

        return $select;
    }


    public function asigna_plan_estudio(bool $header, bool $ws = false){
        $r_modifica =  parent::modifica(header: false,aplica_form:  false); // TODO: Change the autogenerated stub
        if(errores::$error){
            return $this->errores->error(mensaje: 'Error al generar template',data:  $r_modifica);
        }

        $this->row_upd->ac_centro_educativo_id = -1;
        $inputs = (new ac_centro_educativo_html(html: $this->html_base))->genera_inputs_asigna_plan_estudio(
            controler: $this, link: $this->link);
        if(errores::$error){
            $error = $this->errores->error(mensaje: 'Error al generar inputs',data:  $inputs);
            print_r($error);
            die('Error');
        }

        $select = $this->select_ac_centro_educativo_id();
        if(errores::$error){
            return $this->retorno_error(mensaje: 'Error al generar select datos',data:  $select,
                header: $header,ws:$ws);
        }

        $planes_estudio = (new ac_plan_estudio_pertenece($this->link))->planes_estudios(
            ac_centro_educativo_id: $this->ac_centro_educativo_id);
        if(errores::$error){
            return $this->retorno_error(mensaje: 'Error al obtener centros_educativos',data:  $planes_estudio,
                header: $header,ws:$ws);
        }

        foreach ($planes_estudio->registros as $indice=>$plan_estudio){

            $plan_estudio['direccion'] = $plan_estudio['dp_calle_descripcion'].' '.
                $plan_estudio['ac_centro_educativo_exterior'].' '. $plan_estudio['ac_centro_educativo_interior'].' '.
                $plan_estudio['dp_colonia_descripcion'].' '. $plan_estudio['dp_estado_descripcion'];

            $plan_estudio = $this->data_plan_estudio_btn(centro_educativo:$plan_estudio);
            if(errores::$error){
                return $this->retorno_error(mensaje: 'Error al asignar botones',data:  $plan_estudio,
                    header: $header,ws:$ws);
            }
            $planes_estudio->registros[$indice] = $plan_estudio;
        }

        $this->planes_estudio = $planes_estudio;


        return $r_modifica;
    }

    private function data_plan_estudio_btn(array $centro_educativo): array
    {

        $btn_elimina = $this->html_base->button_href(accion:'elimina_bd',etiqueta:  'Elimina',
            registro_id:  $centro_educativo['ac_plan_estudio_pertenece_id'], seccion: 'ac_plan_estudio_pertenece',
            style:  'danger');

        if(errores::$error){
            return $this->errores->error(mensaje: 'Error al generar btn',data:  $btn_elimina);
        }
        $centro_educativo['link_elimina'] = $btn_elimina;

        $params['ac_plan_estudio_pertenece_id'] = $centro_educativo['ac_plan_estudio_pertenece_id'];
        $btn_modifica = $this->html_base->button_href(accion:'modifica_plan_estudio',etiqueta:  'Modifica',
            registro_id:  $centro_educativo['ac_plan_estudio_id'], seccion: 'ac_plan_estudio',style:  'warning', params: $params);

        if(errores::$error){
            return $this->errores->error(mensaje: 'Error al generar btn',data:  $btn_elimina);
        }
        $centro_educativo['link_modifica'] = $btn_modifica;

        $params_ver['ac_centro_educativo_id'] = $centro_educativo['ac_centro_educativo_id'];
        $btn_ve = $this->html_base->button_href(accion:'ve_plan_estudio',etiqueta:  'Ver',
            registro_id:  $centro_educativo['ac_plan_estudio_id'], seccion: 'ac_plan_estudio',style:  'info', params: $params_ver);

        if(errores::$error){
            return $this->errores->error(mensaje: 'Error al generar btn',data:  $btn_elimina);
        }
        $centro_educativo['link_ve'] = $btn_ve;
        return $centro_educativo;
    }

    public function modifica(bool $header, bool $ws = false, string $breadcrumbs = '', bool $aplica_form = true, bool $muestra_btn = true): array|string
    {
        $r_modifica =  parent::modifica(header: false,aplica_form:  false); // TODO: Change the autogenerated stub
        if(errores::$error){
            return $this->errores->error(mensaje: 'Error al generar template',data:  $r_modifica);
        }

        $inputs = (new ac_centro_educativo_html(html: $this->html_base))->genera_inputs_modifica(controler: $this, link: $this->link);
        if(errores::$error){
            $error = $this->errores->error(mensaje: 'Error al generar inputs',data:  $inputs);
            print_r($error);
            die('Error');
        }

        return $r_modifica;
    }

    private function keys_rows_lista(): array
    {
        $keys_row_lista = array();

        $keys = array('ac_centro_educativo_id', 'ac_centro_educativo_codigo','ac_centro_educativo_descripcion',
            'im_registro_patronal_descripcion', 'ac_centro_educativo_exterior',
            'ac_centro_educativo_interior');

        foreach ($keys as $campo){
            $keys_row_lista = $this->key_row_lista_init(campo: $campo, keys_row_lista: $keys_row_lista);
            if(errores::$error){
                return $this->errores->error(mensaje: 'Error al inicializar key',data: $keys_row_lista);
            }
        }

        return $keys_row_lista;
    }

    private function key_row_lista_init(string $campo, array $keys_row_lista): array
    {
        $data = new stdClass();
        $data->campo = $campo;

        $campo = str_replace('ac_centro_educativo_', '', $campo);
        $campo = str_replace('im_', '', $campo);
        $campo = str_replace('dp_', '', $campo);
        $campo = str_replace('_', ' ', $campo);
        $campo = ucfirst(strtolower($campo));

        $data->name_lista = $campo;
        $keys_row_lista[]= $data;
        return $keys_row_lista;
    }

    public function lista(bool $header, bool $ws = false): array
    {
        $r_lista = parent::lista($header, $ws); // TODO: Change the autogenerated stub
        if(errores::$error){
            return $this->retorno_error(mensaje: 'Error al maquetar datos',data:  $r_lista, header: $header,ws:$ws);
        }

        $registros = $this->maqueta_registros_lista(registros: $this->registros);
        if(errores::$error){
            return $this->retorno_error(mensaje: 'Error al maquetar registros',data:  $registros, header: $header,ws:$ws);
        }
        $this->registros = $registros;


        return $r_lista;
    }

    private function maqueta_registros_lista(array $registros): array
    {
        foreach ($registros as $indice=> $row){
            $row = $this->asigna_link_asigna_plan_estudio_row(row: $row);
            if(errores::$error){
                return $this->errores->error(mensaje: 'Error al maquetar row',data:  $row);
            }
            $registros[$indice] = $row;
        }
        return $registros;
    }

    private function asigna_link_asigna_plan_estudio_row(stdClass $row): array|stdClass
    {
        $keys = array('ac_centro_educativo_id');
        $valida = $this->validacion->valida_ids(keys: $keys,registro:  $row);
        if(errores::$error){
            return $this->errores->error(mensaje: 'Error al validar row',data:  $valida);
        }

        $link_asigna_plan_estudio = $this->obj_link->link_con_id(accion:'asigna_plan_estudio',
            registro_id:  $row->ac_centro_educativo_id, seccion:  $this->tabla);
        if(errores::$error){
            return $this->errores->error(mensaje: 'Error al genera link',data:  $link_asigna_plan_estudio);
        }

        $row->link_asigna_plan_estudio = $link_asigna_plan_estudio;
        $row->link_asigna_plan_estudio_style = 'info';

        return $row;
    }
}
